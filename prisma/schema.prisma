// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Expense {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  amount    Int
}

model User {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  name          String        @db.VarChar(255)
  email         String        @unique @db.VarChar(255)
  role          Int
  balance       Float
  wallets       Wallet[]
  transactions  Transaction[]
  investments   Investment[]
  notifications Notification[]
  analytics     Analytics[]
}

model Wallet {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  address   String   @db.VarChar(255)
  currency  String   @db.VarChar(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  type        String   @db.VarChar(50)
  amount      Int
  currency    String   @db.VarChar(50)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
}

model Investment {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  asset       String   @db.VarChar(50)
  amount      Int
  currency    String   @db.VarChar(50)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  type        String   @db.VarChar(50)
  message     String   @db.VarChar(255)
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Analytics {
  id                 String   @id @default(uuid())
  userId             String
  user               User     @relation(fields: [userId], references: [id])
  totalBalance       Float
  totalInvested      Float
  totalProfit        Float
  mostInvestedAsset  String   @db.VarChar(50)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
